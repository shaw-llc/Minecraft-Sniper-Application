name: Build Application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Create certificates directory
      run: mkdir -p certificates
      
    - name: Create empty certificate files for build
      run: |
        touch certificates/entitlements.plist
        echo '<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"><plist version="1.0"><dict></dict></plist>' > certificates/entitlements.plist
        echo 'module.exports = async function (params) { console.log("Notarization skipped"); };' > certificates/notarize.js
    
    - name: Build for current platform
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          npx electron-builder build --win --publish never
        elif [ "$RUNNER_OS" == "macOS" ]; then
          npx electron-builder build --mac --publish never
        elif [ "$RUNNER_OS" == "Linux" ]; then
          npx electron-builder build --linux --publish never
        fi
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.os }}
        path: dist/ 