name: Build Application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install Dependencies (non-Linux)
      if: runner.os != 'Linux'
      run: npm ci
      
    - name: Install Dependencies (Linux)
      if: runner.os == 'Linux'
      run: npm install
    
    - name: Create certificates directory
      run: mkdir -p certificates
      
    - name: Create empty certificate files for build
      run: |
        touch certificates/entitlements.plist
        echo '<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"><plist version="1.0"><dict></dict></plist>' > certificates/entitlements.plist
        echo 'module.exports = async function (params) { console.log("Notarization skipped"); };' > certificates/notarize.js
    
    - name: Set permissions for app-builder
      if: runner.os == 'Linux'
      run: chmod +x node_modules/app-builder-bin/linux/x64/app-builder
    
    - name: Build for current platform
      run: |
        echo "Starting build for $RUNNER_OS..."
        if [ "$RUNNER_OS" == "Windows" ]; then
          # Ensure Windows build tools are properly set up
          npm config set msvs_version 2019
          # Build with specific flags for Windows compatibility
          npx electron-builder build --win --publish never || (echo "Windows build failed, retrying with debug info..." && DEBUG=electron-builder npx electron-builder build --win --publish never)
        elif [ "$RUNNER_OS" == "macOS" ]; then
          # Ensure macOS build tools are properly set up
          export CSC_IDENTITY_AUTO_DISCOVERY=false
          # Build with specific flags for macOS compatibility
          npx electron-builder build --mac --publish never || (echo "macOS build failed, retrying with debug info..." && DEBUG=electron-builder npx electron-builder build --mac --publish never)
        elif [ "$RUNNER_OS" == "Linux" ]; then
          npx electron-builder build --linux --publish never || (echo "Linux build failed, retrying..." && npx electron-builder build --linux --publish never)
        fi
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.os }}
        path: dist/ 