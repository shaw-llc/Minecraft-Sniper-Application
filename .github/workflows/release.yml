name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [16.x]
        
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests colorama python-dotenv urllib3 beautifulsoup4
    
    - name: Install Node.js dependencies
      run: npm ci
    
    - name: Run copy-python script
      run: npm run copy-python
    
    - name: Setup certificates for macOS
      if: matrix.os == 'macos-latest'
      env:
        APPLE_CERT_BASE64: ${{ secrets.APPLE_CERT_BASE64 }}
        APPLE_CERT_PASSWORD: ${{ secrets.APPLE_CERT_PASSWORD }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        echo $APPLE_CERT_BASE64 | base64 --decode > certificates/apple_cert.p12
        security create-keychain -p $KEYCHAIN_PASSWORD build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p $KEYCHAIN_PASSWORD build.keychain
        security import certificates/apple_cert.p12 -k build.keychain -P $APPLE_CERT_PASSWORD -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $KEYCHAIN_PASSWORD build.keychain
    
    - name: Setup certificates for Windows
      if: matrix.os == 'windows-latest'
      env:
        WINDOWS_CERT_BASE64: ${{ secrets.WINDOWS_CERT_BASE64 }}
      run: |
        echo $WINDOWS_CERT_BASE64 | base64 -d > certificates/windows-cert.pfx
    
    - name: Build app
      run: npm run build
      
    - name: Make distribution for release
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        WINDOWS_CERT_PASSWORD: ${{ secrets.WINDOWS_CERT_PASSWORD }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npm run publish

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: installers-${{ matrix.os }}
        path: |
          out/make/**/*
          
  create-github-release:
    needs: release
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts
    
    - name: Display structure of downloaded files
      run: ls -R
      working-directory: artifacts
    
    - name: Get version from tag
      id: get_version
      run: echo "::set-output name=version::${GITHUB_REF#refs/tags/v}"
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/installers-windows-latest/**/*.exe
          artifacts/installers-macos-latest/**/*.dmg
          artifacts/installers-ubuntu-latest/**/*.deb
          artifacts/installers-ubuntu-latest/**/*.AppImage
        draft: false
        prerelease: false
        name: OpenMC Username Sniper v${{ steps.get_version.outputs.version }}
        body: |
          ## OpenMC Username Sniper v${{ steps.get_version.outputs.version }}
          
          ### Changes in this release:
          - [Add release notes here]
          
          ### Download for your platform:
          - Windows: OpenMC-Username-Sniper-Setup-Windows.exe
          - macOS: OpenMC-Username-Sniper-macOS.dmg
          - Linux (deb): openmc-username-sniper_linux.deb
          - Linux (AppImage): openmc-username-sniper_linux.AppImage
          
          See the [README](https://github.com/yourusername/OpenMC-Username-Sniper/blob/main/README-APP.md) for installation instructions.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 